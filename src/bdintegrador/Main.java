/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bdintegrador;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 *
 * @author Suazo
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        jl_origen.setModel(new DefaultListModel());
        jl_destino.setModel(new DefaultListModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nom_base_origen = new javax.swing.JTextField();
        puerto_origen = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        nom_base_destino = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        puerto_destino = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        nom_usuario_destino = new javax.swing.JTextField();
        pass_destino = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jb_probar_origen = new javax.swing.JButton();
        jb_probar_destino = new javax.swing.JButton();
        jb_guardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jl_destino = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_origen = new javax.swing.JList<>();
        jb_agregar = new javax.swing.JButton();
        jb_eliminar = new javax.swing.JButton();
        jb_guardar_trig = new javax.swing.JButton();
        jb_cancelar_trig = new javax.swing.JButton();
        jb_cargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Base de Datos Origen");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Base de Datos Destino");

        jLabel4.setText("Nombre Base de Datos");

        jLabel5.setText("Puerto");

        nom_base_origen.setText("sakila");

        puerto_origen.setText("1433");

        jLabel9.setText("Nombre Base de Datos");

        nom_base_destino.setText("sakila");

        jLabel10.setText("Puerto");

        puerto_destino.setText("3307");

        jLabel11.setText("Nombre Usuario");

        nom_usuario_destino.setText("root");

        pass_destino.setText("password");

        jLabel12.setText("Password");

        jb_probar_origen.setText("Probar");
        jb_probar_origen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_probar_origenActionPerformed(evt);
            }
        });

        jb_probar_destino.setText("Probar");
        jb_probar_destino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_probar_destinoActionPerformed(evt);
            }
        });

        jb_guardar.setText("Guardar");
        jb_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_guardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(38, 38, 38))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_probar_origen)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nom_base_origen, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                        .addComponent(puerto_origen)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_probar_destino)
                    .addComponent(nom_base_destino)
                    .addComponent(puerto_destino)
                    .addComponent(nom_usuario_destino)
                    .addComponent(pass_destino, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jb_guardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(nom_base_origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(puerto_origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(nom_base_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(puerto_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(nom_usuario_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(pass_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_probar_origen)
                    .addComponent(jb_probar_destino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jb_guardar)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Configuracion", jPanel1);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Tablas DB Origen");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Sin Replicar");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Replicando");

        jScrollPane1.setViewportView(jl_destino);

        jScrollPane2.setViewportView(jl_origen);

        jb_agregar.setText("->");
        jb_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_agregarActionPerformed(evt);
            }
        });

        jb_eliminar.setText("<-");
        jb_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_eliminarActionPerformed(evt);
            }
        });

        jb_guardar_trig.setText("Guardar");
        jb_guardar_trig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_guardar_trigActionPerformed(evt);
            }
        });

        jb_cancelar_trig.setText("Cancelar");
        jb_cancelar_trig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelar_trigActionPerformed(evt);
            }
        });

        jb_cargar.setText("Cragar");
        jb_cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jb_cargar)
                        .addGap(163, 163, 163)
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jb_agregar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jb_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jb_guardar_trig)
                .addGap(166, 166, 166)
                .addComponent(jb_cancelar_trig)
                .addContainerGap(193, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jb_cargar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jb_agregar)
                                .addGap(44, 44, 44)
                                .addComponent(jb_eliminar)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_guardar_trig)
                    .addComponent(jb_cancelar_trig)))
        );

        jTabbedPane1.addTab("Tablas", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_probar_origenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_probar_origenActionPerformed
        probarOrigen();
    }//GEN-LAST:event_jb_probar_origenActionPerformed

    private void jb_probar_destinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_probar_destinoActionPerformed
        probarDestino();
    }//GEN-LAST:event_jb_probar_destinoActionPerformed

    private void jb_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_guardarActionPerformed
        guardarDatos();
    }//GEN-LAST:event_jb_guardarActionPerformed

    private void jb_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_agregarActionPerformed
        agregarTabla();
    }//GEN-LAST:event_jb_agregarActionPerformed

    private void jb_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_eliminarActionPerformed
        eliminarTabla();
    }//GEN-LAST:event_jb_eliminarActionPerformed

    private void jb_guardar_trigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_guardar_trigActionPerformed
        crearTriggers();
    }//GEN-LAST:event_jb_guardar_trigActionPerformed

    private void jb_cancelar_trigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelar_trigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_cancelar_trigActionPerformed

    private void jb_cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cargarActionPerformed
        cargarTablas();
    }//GEN-LAST:event_jb_cargarActionPerformed

    public Connection connectSrc = null;
    public String JDBC_URL = "";
    
    public Connection connectDest = null;
    public String JDBC_URL_DEST = "";
    
    public void probarOrigen(){
        try{
            //PRUEBA
            JDBC_URL = "jdbc:sqlserver://localhost:1433;databaseName=sakila;integratedSecurity=true";
            //
            String base_or = nom_base_origen.getText();
            String puerto_or = puerto_origen.getText();
            
            JDBC_URL = "jdbc:sqlserver://localhost:" + puerto_or + ";databaseName=" + base_or + ";integratedSecurity=true";
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connectSrc = DriverManager.getConnection(JDBC_URL);
            if (connectSrc != null) {
                DatabaseMetaData metaObj = (DatabaseMetaData) connectSrc.getMetaData();
                System.out.println("Driver Name?= " + metaObj.getDriverName() + ", Driver Version?="  + metaObj.getDriverVersion() + ", Product Name?= " + metaObj.getDatabaseProductName() + ", Product Version?= " + metaObj.getDatabaseProductVersion());
            }
            Statement stmt = connectSrc.createStatement();
            ResultSet rs=stmt.executeQuery("select * from actor");  
            ResultSetMetaData metadata = rs.getMetaData();
            int ColCount = metadata.getColumnCount();
            System.out.println(metadata.getColumnTypeName(1));
            System.out.println(metadata.getColumnTypeName(2));
            System.out.println(metadata.getColumnTypeName(3));
            System.out.println(metadata.getColumnTypeName(4));
            
            JOptionPane.showMessageDialog(this, "Conexion Exitosa!");
        }catch(Exception e){ 
           JOptionPane.showMessageDialog(this, "ERROR!");
           e.printStackTrace();
        }
    }
    
    public void probarDestino(){
        try{
            //PRUEBA
            JDBC_URL_DEST= "jdbc:mysql://localhost:3307/sakila?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
            //PRUEBA
            
            String base_des = nom_base_destino.getText();
            String puerto_des = puerto_destino.getText();
            String usuario_des = nom_usuario_destino.getText();
            String pass_des = pass_destino.getText();
            
            JDBC_URL_DEST= "jdbc:mysql://localhost:" + puerto_des + "/" + base_des + "?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
            
            //Class.forName("com.mysql.jdbc.Driver");
            connectDest = DriverManager.getConnection(JDBC_URL_DEST, usuario_des, pass_des);
            Statement stmt = connectDest.createStatement();
            if (connectDest != null) {
                DatabaseMetaData metaObj = (DatabaseMetaData) connectDest.getMetaData();
                System.out.println("Driver Name?= " + metaObj.getDriverName() + ", Driver Version?="  + metaObj.getDriverVersion() + ", Product Name?= " + metaObj.getDatabaseProductName() + ", Product Version?= " + metaObj.getDatabaseProductVersion());
            }
            ResultSet rs=stmt.executeQuery("select * from actor");  
            ResultSetMetaData metadata = rs.getMetaData();
            int ColCount = metadata.getColumnCount();
            while(rs.next()){
                for (int i = 1; i <= ColCount; i++) {
                    System.out.print("["+rs.getObject(i)+"] ");  
                }
                System.out.println("");
            }
            JOptionPane.showMessageDialog(this, "Conexion Exitosa!");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "ERROR!");
            e.printStackTrace();
        }
    }
    
    public void guardarDatos(){
        try{
        String base_or = nom_base_origen.getText();
        String puerto_or = puerto_origen.getText();

        JDBC_URL = "jdbc:sqlserver://localhost:" + puerto_or + ";databaseName=" + base_or + ";integratedSecurity=true";

        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        connectSrc = DriverManager.getConnection(JDBC_URL);
        
        String base_des = nom_base_destino.getText();
        String puerto_des = puerto_destino.getText();
        String usuario_des = nom_usuario_destino.getText();
        String pass_des = pass_destino.getText();

        JDBC_URL_DEST= "jdbc:mysql://localhost:" + puerto_des + "/" + base_des + "?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";

        //Class.forName("com.mysql.jdbc.Driver");
        connectDest = DriverManager.getConnection(JDBC_URL_DEST, usuario_des, pass_des);
            
        JOptionPane.showMessageDialog(this, "Guardado Exitoso!");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "ERROR!");
            e.printStackTrace();
        }
    }
    
    public void cargarTablas(){
        try{
        Statement stmt = connectSrc.createStatement();
        ResultSet tablas = stmt.executeQuery("select TABLE_NAME from INFORMATION_SCHEMA.TABLES;");
        ResultSetMetaData tablasMD = tablas.getMetaData();
        DefaultListModel dmodel_or= new DefaultListModel();
        while(tablas.next()){
            dmodel_or.addElement(tablas.getString(1));
        }
        jl_origen.setModel(dmodel_or);
        jl_destino.setModel(new DefaultListModel());
        
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void agregarTabla(){
        try{
            DefaultListModel dmodel_or= (DefaultListModel)jl_origen.getModel();
            DefaultListModel dmodel_des= (DefaultListModel)jl_destino.getModel();

            dmodel_des.addElement(dmodel_or.getElementAt(jl_origen.getSelectedIndex()));
            dmodel_or.remove(jl_origen.getSelectedIndex());

            jl_origen.setModel(dmodel_or);
            jl_destino.setModel(dmodel_des);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void eliminarTabla(){
        try{
            DefaultListModel dmodel_or= (DefaultListModel)jl_origen.getModel();
            DefaultListModel dmodel_des= (DefaultListModel)jl_destino.getModel();

            dmodel_or.addElement(dmodel_des.getElementAt(jl_destino.getSelectedIndex()));
            dmodel_des.remove(jl_destino.getSelectedIndex());

            jl_origen.setModel(dmodel_or);
           jl_destino.setModel(dmodel_des);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    /*
    create trigger prueba on actor
        after update, insert, delete
        as
        begin
                select * from actor;
        end
        go
    */
    
    public void crearTriggers(){
        try{
            DefaultListModel dmodel_des= (DefaultListModel)jl_destino.getModel();
            for (int i = 0; i < dmodel_des.size(); i++) {
                String tabla = (String)dmodel_des.getElementAt(i);
                Statement stmt = connectSrc.createStatement();
                ResultSet rs=stmt.executeQuery("select * from " + tabla);  
                ResultSetMetaData metadata = rs.getMetaData();
                int ColCount = metadata.getColumnCount();
                rs.next();
                ArrayList<String> columnas = new <String>ArrayList();
                
                /*
                //CREAR LA TABLA LOG DE CADA TABLA POR TRANSFERIR
                for (int j = 1; j <= ColCount; j++) {
                    columnas.add(metadata.getColumnName(j) + "_old"); 
                    columnas.add(metadata.getColumnTypeName(j));
                    columnas.add(metadata.getColumnName(j) + "_new"); 
                    columnas.add(metadata.getColumnTypeName(j));
                }
                
                //tipo 1= update, 2= insert, 3= delete
                
                String tablaLog = "create table " + tabla + "_log ( tipo INT NOT NULL, ";
                
                for (int j = 0; j < columnas.size(); j++) {
                    tablaLog += columnas.get(j) + " ";
                    j++;
                    if ("VARCHAR".equals(columnas.get(j)) || "varchar".equals(columnas.get(j))) {
                        tablaLog += columnas.get(j) + "(50) DEFAULT NULL, ";
                    }else{
                        tablaLog += columnas.get(j) + " DEFAULT NULL, ";
                    }
                }
                
                tablaLog = tablaLog.substring(0, tablaLog.length() - 1);
                tablaLog += ")";
                
                try{
                    stmt.executeQuery(tablaLog);
                }catch(Exception e){
                    System.out.println("Exeption inevitable: ");
                    e.printStackTrace();
                }
                //CREAR LOS TRIGGERS PARA AGREGAR A LA TABLA LOG
                
                //UPDATE = 1
                rs=stmt.executeQuery("select * from " + tabla);  
                metadata = rs.getMetaData();
                String trigger = "create trigger " + tabla + "_log_trig on " + tabla + " "
                        + "after update "
                        + "as "
                        + "begin "
                        + "insert into " + tabla + "_log "
                        + "( 1, ";
                
                for (int j = 1; j <= ColCount; j++) {
                    trigger += metadata.getColumnName(j) + "_old, ";
                    trigger += metadata.getColumnName(j) + "_new, ";
                }
                trigger = trigger.substring(0, trigger.length() - 1);
                
                stmt.executeQuery(trigger);
                
                //INSERT = 2
                rs=stmt.executeQuery("select * from " + tabla);  
                metadata = rs.getMetaData();
                trigger = "create trigger " + tabla + "_log_trig on " + tabla + " "
                        + "after insert "
                        + "as "
                        + "begin "
                        + "insert into " + tabla + "_log "
                        + "( 2, ";
                
                for (int j = 1; j <= ColCount; j++) {
                    trigger += "null, ";
                    trigger += metadata.getColumnName(j) + "_new, ";
                }
                trigger = trigger.substring(0, trigger.length() - 1);
                
                stmt.executeQuery(trigger);
                
                //DELETE = 3
                rs=stmt.executeQuery("select * from " + tabla);  
                metadata = rs.getMetaData();
                trigger = "create trigger " + tabla + "_log_trig on " + tabla + " "
                        + "after delete "
                        + "as "
                        + "begin "
                        + "insert into " + tabla + "_log "
                        + "( 3, ";
                
                for (int j = 1; j <= ColCount; j++) {
                    trigger += metadata.getColumnName(j) + ", ";
                    trigger += "null, ";
                }
                trigger = trigger.substring(0, trigger.length() - 1);
                
                stmt.executeQuery(trigger);
                
                System.out.println("");
                */
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jb_agregar;
    private javax.swing.JButton jb_cancelar_trig;
    private javax.swing.JButton jb_cargar;
    private javax.swing.JButton jb_eliminar;
    private javax.swing.JButton jb_guardar;
    private javax.swing.JButton jb_guardar_trig;
    private javax.swing.JButton jb_probar_destino;
    private javax.swing.JButton jb_probar_origen;
    private javax.swing.JList<String> jl_destino;
    private javax.swing.JList<String> jl_origen;
    private javax.swing.JTextField nom_base_destino;
    private javax.swing.JTextField nom_base_origen;
    private javax.swing.JTextField nom_usuario_destino;
    private javax.swing.JTextField pass_destino;
    private javax.swing.JTextField puerto_destino;
    private javax.swing.JTextField puerto_origen;
    // End of variables declaration//GEN-END:variables
}
